name: superagent
version: "3.8"
services:
  superagent-api:
    container_name: superagent-api
    networks:
      - superagent_network
    build:
      context: ../superagent
      dockerfile: Dockerfile
    env_file:
      - superagent/.env
    # command: ["/bin/bash", "setup.docker.sh"]
    environment:
      - PORT=8080
    ports:
      - 8080:8080
    depends_on:
      pgdb:
        condition: service_healthy
    restart: unless-stopped

  superagent-ui:
    container_name: superagent-ui
    networks:
      - superagent_network
    build:
      context: ../ui
      dockerfile: Dockerfile
      args:
        ENV_FILE: .env.docker # Specify the path to your docker .env file
    env_file:
      - ../ui/.env.docker
    environment:
      - PORT=3000
      # - SUPABASE_URL=${SUPABASE_URL}
      # - SUPABASE_KEY=${SUPABASE_KEY}
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - 3000:3000

  pgdb:
    container_name: pgdb
    networks:
      - superagent_network
    image: postgres:12
    pull_policy: missing
    restart: unless-stopped
    volumes:
      - type: volume
        source: pgdb-data
        target: "/var/lib/postgresql/data"
    environment:
      POSTGRES_DB: admin
      POSTGRES_USER: ${DBUSER}
      POSTGRES_PASSWORD: ${DBPASS}
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DBUSER}"]
      interval: 30s
      timeout: 30s
      retries: 3

  pgadmin:
    container_name: pgadmin
    networks:
      - superagent_network
    image: dpage/pgadmin4
    pull_policy: missing
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_ADDRESS: 0.0.0.0
      PGADMIN_LISTEN_PORT: 5050
    ports:
      - 5050:5050
    volumes:
      - type: volume
        source: pgadmin-data
        target: /root/.pgadmin
    restart: unless-stopped

volumes:
  pgdb-data:
  pgadmin-data:

networks:
  superagent_network:
    external: true
